{
    //////////////////////////////////////
    // LaTeX
    //////////////////////////////////////
    "latex-workshop.latex.tools": [
        {
            "name": "pdflatex",
            "command": "pdflatex",
            "args": [
                "--shell-escape",
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "%DOC%"
            ]
        },
        {
            "name": "biber",
            "command": "biber",
            "args": [
                "%DOCFILE%"
            ],
        }
    ],
    "latex-workshop.latex.recipes": [
        {
            "name": "pdflatex & biber",
            "tools": [
                "pdflatex",
                "biber"
            ]
        },
        {
            "name": "pdflatex",
            "tools": [
                "pdflatex"
            ]
        }
    ],
    //////////////////////////////////////
    // Python (linting & formatting)
    //////////////////////////////////////
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true
    },
    "pylint.importStrategy": "fromEnvironment",
    "python.analysis.typeCheckingMode": "basic",
    "python.languageServer": "Pylance",
    "python.analysis.completeFunctionParens": true,
    "python.analysis.diagnosticSeverityOverrides": {
        "reportGeneralTypeIssues": "warning",
        "reportUndefinedVariable": "warning",
        "reportOptionalMemberAccess": "warning"
    },
    "python.analysis.extraPaths": [
        "venv/lib/python3.12/site-packages/"
    ],
    "python.autoComplete.extraPaths": [
        "venv/lib/python3.12/site-packages/"
    ],
    //////////////////////////////////////
    // Rust
    //////////////////////////////////////
    "[rust]": {
        "editor.formatOnSave": true
    },
    //////////////////////////////////////
    // Linting (TS with ESLint)
    //////////////////////////////////////
    "editor.formatOnSave": false, // it still autosaves with the options below
    // https://eslint.style/guide/faq#how-to-auto-format-on-save
    // https://github.com/microsoft/vscode-eslint#settings-options
    "[typescriptreact]": {
        "editor.formatOnSave": false, // to avoid formatting twice (ESLint + VSCode)
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "editor.indentSize": 2,
        "editor.tabSize": 2,
    },
    "[javascript]": {
        "editor.formatOnSave": false, // to avoid formatting twice (ESLint + VSCode)
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "editor.indentSize": 2,
        "editor.tabSize": 2,
    },
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit"
    },
    // this disables VSCode built-in formatter (instead we want to use ESLint)
    "eslint.validate": [
        "typescript",
        "typescriptreact",
    ],
    "eslint.format.enable": true, // use ESLint as formatter
    "eslint.options": {
        "overrideConfigFile": "phonetics-motion-canvas/eslint.mjs"
    },
    //////////////////////////////////////
    // TypeScript
    //////////////////////////////////////
    // Turn off tsc task auto detection since we have the necessary tasks as npm scripts
    "typescript.tsc.autoDetect": "off",
    //////////////////////////////////////
    // Files
    //////////////////////////////////////
    "files.exclude": {
        "**/__pycache__/": true,
        "**/node_modules": true,
    },
    //////////////////////////////////////
    // Editor
    //////////////////////////////////////
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100, // toggle via Alt + Z shortcut
    "editor.mouseWheelZoom": true,
    // "editor.rulers": [
    //     {
    //         "column": 80, // soft limit
    //         "color": "#e5e5e5"
    //     },
    //     {
    //         "column": 100, // hard limit
    //         "color": "#c9c9c9"
    //     }
    // ],
    //////////////////////////////////////
    // Git
    //////////////////////////////////////
    "git.inputValidation": true,
    "git.inputValidationSubjectLength": 50,
    "git.inputValidationLength": 72,
    //////////////////////////////////////
    // Spell Checker
    //////////////////////////////////////
    "cSpell.language": "en,de-DE,fr",
    "cSpell.diagnosticLevel": "Hint",
    "cSpell.words": [
        "Cuda",
        "cudarc",
        "dataclass",
        "dtype",
        "htod",
        "louvain",
        "msgpack",
        "needleman",
        "Needleman",
        "ngrams",
        "nɥɑ̃s",
        "pɥisɑ̃s",
        "tqdm",
        "unparallelized",
        "wunsch"
    ],
    //////////////////////////////////////
    // Rust
    //////////////////////////////////////
    "files.readonlyInclude": {
        "/.cargo/registry/src//*.rs": true,
        "/lib/rustlib/src/rust/library//*.rs": true
    },
    //////////////////////////////////////
    // C++
    //////////////////////////////////////
    "C_Cpp.errorSquiggles": "disabled",
    //////////////////////////////////////
    // Code presentation mode for video
    //////////////////////////////////////
    "editor.acceptSuggestionOnCommitCharacter": false,
    "editor.quickSuggestions": {
        "other": false,
        "comments": false,
        "strings": false
    },
    "editor.wordBasedSuggestions": "off",
    "editor.suggestOnTriggerCharacters": false,
    "inlineChat.lineNaturalLanguageHint": false,
    "workbench.colorCustomizations": {
        "editorError.background": "#ffffff00",
        "editorError.border": "#ffffff00",
        "editorError.foreground": "#ffffff00",
        "editorWarning.background": "#ffffff00",
        "editorWarning.border": "#ffffff00",
        "editorWarning.foreground": "#ffffff00",
    }
}